<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd

        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
    <context:property-placeholder location="classpath:datasource.properties"/>
    <context:component-scan base-package="com.starServer.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <context:property-placeholder location="classpath:datasource.properties"
                                  order="1"/>

    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <mvc:message-converters register-defaults="true">
            <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean class="com.starServer.plugins.UserArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>


    <!-- mvc校验器 -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
       <!-- &lt;!&ndash; 如果不加默认到 使用classpath下的 ValidationMessages.properties &ndash;&gt;-->
       <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <mvc:resources location="classpath:/META-INF/resources/" mapping="swagger-ui.html"/>
    <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/>
<!--
    <mvc:resources mapping="/swagger-ui.html" location="/WEB-INF/resources/"/>
-->
    <mvc:resources mapping="/**" location="/WEB-INF/home/"/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/user/*"/>

            <mvc:exclude-mapping path="/swagger/**"/>
            <mvc:exclude-mapping path="/v2/api-docs/**"/>


            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.starServer.interceptor.AccessTokenValidationInterceptor"/>
        </mvc:interceptor>


        <mvc:interceptor>
            <mvc:mapping path="/manage/**"/>
            <!-- 不需要拦截的uri -->

            <mvc:exclude-mapping path="/swagger/**"/>
            <mvc:exclude-mapping path="/v2/api-docs/**"/>
            <!--只有登录接口不需要Auth验证 -->
            <mvc:exclude-mapping path="/manage/auth"/>
            <!--官网获取最新app的Url不需要拦截 -->
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.starServer.interceptor.AdminAccessTokenValidationInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <context:annotation-config/>
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <context:component-scan base-package="com.starServer.service.serviceImpl"/>


    <bean id="conversionService"
          class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.starServer.util.StringToEnumConverterFactory"/>
            </set>
        </property>
    </bean>
    <cache:annotation-driven/>

</beans>